# Copyright (c) 2001, Stanford University
# All rights reserved
#
# See the file LICENSE.txt for information on redistributing this software.


# How many display tiles
TILE_COLS = 2
TILE_ROWS = 1

# Size of each tile, in pixels
TILE_WIDTH = 300
TILE_HEIGHT = 300

# Hostnames
APPHOST = "localhost"
NETHOSTS = ["localhost", "localhost", "localhost", "localhost"]

# Run crserver and crappfaker automatically?
AUTOSTART = 0
SHELL = "/usr/bin/rsh"

MTU = 500 * 1000


#------------------------------------------------------------------------------
import sys, socket
sys.path.append( "../server" )
from mothership import *

if len(sys.argv) > 1:
	demo = sys.argv[1]
	firstExtra = 2
else:
	demo = "atlantis"
	firstExtra = 1
	
MOTHERSHIP = socket.gethostname()

# Collect remaining command line params as program options
ExtraOpts = ""
for arg in sys.argv[firstExtra:]:
	ExtraOpts += " " + arg

cr = CR()
cr.MTU( MTU )

clientspuname = 'tilesort'
if clientspuname == 'pack' and TILE_ROWS*TILE_COLS != 1:
	print >> sys.stderr, "You cant use the pack SPU with more than one server."
	sys.exit(0)

# Set up application node
tilesortspu = SPU( clientspuname )
tilesortspu.Conf('bucket_mode', 'Uniform Grid')
tilesortspu.Conf('draw_bbox', 0)
tilesortspu.Conf('bbox_scale', 1.0)
tilesortspu.Conf('dlist_state_tracking', 0)

clientnode = CRApplicationNode( APPHOST )
clientnode.StartDir( crbindir )
clientnode.SetApplication( demo + ExtraOpts)
clientnode.AddSPU( tilesortspu )
if AUTOSTART:
	env = "LD_LIBRARY_PATH=" + crlibdir
	prog = crbindir + "/crappfaker -mothership " + MOTHERSHIP
	clientnode.AutoStart( [SHELL,
						   APPHOST,
						   "/bin/sh -c '" + env + " " + prog + "'"] )
	# If you want o run locally with /bin/sh, try this:
	#clientnode.AutoStart( ["/bin/sh", "-c", env + " " + prog] )

# Set up network nodes
for row in range(TILE_ROWS):
	for col in range(TILE_COLS):
		index = row * TILE_COLS + col
		renderspu = SPU( 'render' )
		renderspu.Conf( 'window_geometry',
						[col*(TILE_WIDTH+10), 1.1*row*TILE_HEIGHT,
						 TILE_WIDTH, TILE_HEIGHT] )
		renderspu.Conf('display_string', ':0')
		renderspu.Conf('title', "Chromium Render SPU %d" % index)

		node = CRNetworkNode( NETHOSTS[index] )
		if clientspuname == 'tilesort':
			node.AddTile( col*TILE_WIDTH, (TILE_ROWS-row-1)*TILE_HEIGHT,
						  TILE_WIDTH, TILE_HEIGHT )

		node.Conf('optimize_bucket', 1)
		node.AddSPU( renderspu )
		if AUTOSTART:
			env = "LD_LIBRARY_PATH=" + crlibdir
			prog = crbindir + "/crserver -mothership " + MOTHERSHIP
			node.AutoStart( [SHELL,
							 NETHOSTS[index],
							 "/bin/sh -c '" + env + " " + prog + "'"] )
			# If you want o run locally with /bin/sh, try this:
			#node.AutoStart( ["/bin/sh", "-c", env + " " + prog] )

		cr.AddNode( node )

		tilesortspu.AddServer( node, protocol='tcpip', port=7000 + index )


cr.AddNode( clientnode )

cr.Go()
