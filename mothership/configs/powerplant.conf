# Copyright (c) 2001, Stanford University
# All rights reserved
#
# See the file LICENSE.txt for information on redistributing this software.

# Configuration for parallel_modelview

import sys
sys.path.append( "../server" )
from mothership import *

if len(sys.argv) != 2:
	print >> sys.stderr, "usage: %s <num_nodes>" % sys.argv[0]
	sys.exit(-1)
num_clients = int(sys.argv[1])

down_machines = [1, 2, 7, 8, 13,14,15,16,21,22,23,24]
cur_machine = 1
total_machines = 32
live_machines = total_machines - len(down_machines)
machine_root = 'chromium'
mothership_host = 'chromium1'
render_machine = 'chromium1'

if num_clients > live_machines:
	print >> sys.stderr, "Sorry, I can't do a run with %d clients..." % num_clients
	if num_clients > total_machines:
		print >> sys.stderr, "You only have %d machines total!" % (total_machines)
	elif len(down_machines) == 1:
		print >> sys.stderr, "Although you have %d machines, number %d is down." % (total_machines, down_machines[0])
	else:
		print >> sys.stderr, "Although you have %d machines, %d are down.  They are: " % (total_machines, len(down_machines))
		print >> sys.stderr, down_machines
	sys.exit(-1)

Demo = 'pmodel'
WinWidth = 768
WinHeight = 768

Demo = os.path.join(crbindir, Demo)

# Set up the server node
servernode = CRNetworkNode( render_machine )
servernode.Conf( "only_swap_once", 1 )
servernode.Conf( "only_clear_once", 1 )
renderspu = SPU( 'render' )
renderspu.Conf( 'window_geometry', [0, 0, WinWidth, WinHeight] )
printspu = SPU( 'print' )
printspu.Conf( 'log_file', "/tmp/foo" )
fpsspu = SPU( 'fps' )
#servernode.AddSPU( printspu )
servernode.AddSPU( fpsspu )
servernode.AddSPU( renderspu )
servernode.autostart =  "/usr/bin/rsh"
servernode.autostart_argv = ( "rsh", render_machine, "crserver" )

cr = CR()
cr.MTU( 16*1024 )
cr.AddNode( servernode )


for i in range(num_clients):
	while cur_machine in down_machines:
		cur_machine+=1
	machine_name = machine_root + `cur_machine`
	cur_machine += 1
	appnode = CRApplicationNode( machine_name )
	appnode.SetApplication( '%s -nodeid %d -nodes %d' % (Demo, i, num_clients) )
	appnode.StartDir( crbindir )
	appnode.autostart =  "/usr/bin/rsh"
	appnode.autostart_argv = ( "rsh", machine_name, "crappfaker -mothership %s" % mothership_host )
	rbspu = SPU('readback')
	#rbspu = SPU('render')
	rbspu.Conf('window_geometry', [0, 0, WinWidth, WinHeight])
	rbspu.Conf('extract_depth', '1')
	packspu = SPU('pack')
	#fpsspu = SPU( 'fps' )
	#appnode.AddSPU( fpsspu )
	appnode.AddSPU( rbspu )
	appnode.AddSPU( packspu )
	packspu.AddServer( servernode, 'tcpip' )
	cr.AddNode( appnode )

cr.Go()
