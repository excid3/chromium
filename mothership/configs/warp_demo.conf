# Copyright (c) 2001, Stanford University
# All rights reserved
#
# See the file LICENSE.txt for information on redistributing this software.

import sys
sys.path.append( "../server" )
from mothership import *

demo = sys.argv[1] 

cr = CR()
cr.MTU( 1024*1024 )

# Setup 2 render nodes
app_node_host     = 'localhost'
render_node1_host = 'localhost'
render_node2_host = 'localhost'

TILE_WIDTH  = 256 
TILE_HEIGHT = 192
SLOP        = 30

sin_theta   = 0.7071
cos_theta   = 0.7071
shift       = 2

#----------------------------------------------------------------
# Here we have our transforms. 
#
# Note that these matricies are in row-major order
ident_matrix       = [1, 0, 0,  0, 1, 0,  0, 0, 1]

tile_2_matrix      = [cos_theta, -1*sin_theta, shift,   
				      sin_theta, cos_theta,  0,
					  0, 0, 1]
tile_2_matrix_inv =  [cos_theta, sin_theta, -1*shift*cos_theta,
					  -1*sin_theta, cos_theta, shift*sin_theta,
   					  0, 0, 1]



# Setup the application/tilesort node 
tilesort_spu = SPU('tilesort')

#---------------------------------------------------------------
# Here we configure the Tilesort SPU to use the warped displays
tilesort_spu.Conf('local_tile_spec', 1)
tilesort_spu.Conf('bucket_mode',     'Warped Grid')
tilesort_spu.AddDisplay(0, TILE_WIDTH, TILE_HEIGHT, ident_matrix, ident_matrix);
tilesort_spu.AddDisplay(1, TILE_WIDTH, TILE_HEIGHT, tile_2_matrix_inv, tile_2_matrix);

# Setup the first render node
readback_spu = SPU('render')
readback_spu.Conf('window_geometry', [100, 100+2*TILE_HEIGHT+SLOP, TILE_WIDTH, TILE_HEIGHT])
render_node1 = CRNetworkNode(render_node1_host)
#---------------------------------------------------------------
# Here we configure one of the CRServers
render_node1.Conf('local_tile_spec', 1)
render_node1.AddTileToDisplay(0, 0, 0, TILE_WIDTH, TILE_HEIGHT )
render_node1.AddSPU(readback_spu)

# setup the second render node
readback_spu = SPU('render')
readback_spu.Conf('window_geometry', [100, 100+3*TILE_HEIGHT+2*SLOP, TILE_WIDTH, TILE_HEIGHT])
render_node2 = CRNetworkNode(render_node2_host)

#---------------------------------------------------------------
# Here we configure the other CRServer
render_node2.Conf('local_tile_spec', 1)
render_node2.AddTileToDisplay(1, 0, 0, TILE_WIDTH, TILE_HEIGHT )
render_node2.AddSPU(readback_spu)

tilesort_spu.AddServer(render_node1, protocol='tcpip', port=8000 )
tilesort_spu.AddServer(render_node2, protocol='tcpip', port=7001 )

app_node = CRApplicationNode(app_node_host)
app_node.StartDir( crbindir )
app_node.SetApplication( os.path.join(crbindir,demo))
app_node.AddSPU(tilesort_spu)

# cr setup
cr.AddNode(render_node1)
cr.AddNode(render_node2)
cr.AddNode(app_node)

cr.Go()
