# Test the dist_texture SPU.
# First run this config as:
#   python dist_texture.conf write
# Then, run as:
#   python dist_texture.conf read



# How many display tiles
TILE_COLS = 2
TILE_ROWS = 1

# Size of each tile, in pixels
TILE_WIDTH = 200
TILE_HEIGHT = 400

# Hostnames
APPHOST = "localhost"
NETHOSTS = ["localhost", "localhost", "localhost", "localhost"]


# Run crserver and crappfaker automatically?
AUTOSTART = 0
SHELL = "/usr/bin/rsh"

MTU = 1000 * 1000 * 3


#------------------------------------------------------------------------------
import sys, socket
sys.path.append("../server")
from mothership import *

if len(sys.argv) != 2:
		print "Error: need to specify 'read' or 'write' argument."
		sys.exit(1)
if sys.argv[1] == "read":
	PROGRAM = "./disttexture -read"
elif sys.argv[1] == "write":
	PROGRAM = "./disttexture -write"
else:
	print "Error: need to specify 'read' or 'write' argument."
	sys.exit(1)
	
MOTHERSHIP = socket.gethostname()


cr = CR()
cr.MTU(MTU)


# Set up application node
clientnode = CRApplicationNode(APPHOST)
clientnode.StartDir(crbindir)
clientnode.SetApplication(PROGRAM)

# app node's dist_texture spu
#disttexspu = SPU('dist_texture')
#clientnode.AddSPU(disttexspu)

# app node's tilesort SPU
tilesortspu = SPU('tilesort')
tilesortspu.Conf('bucket_mode', 'Test All Tiles')
tilesortspu.Conf('bucket_mode', 'Broadcast')
tilesortspu.Conf('bucket_mode', 'Non-Uniform Grid')
tilesortspu.Conf('draw_bbox', 0)
tilesortspu.Conf('bbox_scale', 1.0)
tilesortspu.Conf('lazy_send_dlists', 0)
tilesortspu.Conf('dlist_state_tracking', 0)
clientnode.AddSPU(tilesortspu)

if AUTOSTART:
	env = "LD_LIBRARY_PATH=" + crlibdir
	prog = crbindir + "/crappfaker -mothership " + MOTHERSHIP
	clientnode.AutoStart([SHELL,
						   APPHOST,
						   "/bin/sh -c '" + env + " " + prog + "'"])
	# If you want o run locally with /bin/sh, try this:
	#clientnode.AutoStart(["/bin/sh", "-c", env + " " + prog])

# Set up network nodes
for row in range(TILE_ROWS):
	for col in range(TILE_COLS):
		index = row * TILE_COLS + col

		node = CRNetworkNode(NETHOSTS[index])
		node.Conf('optimize_bucket', 1)
		node.AddTile(col*TILE_WIDTH, (TILE_ROWS-row-1)*TILE_HEIGHT,
					 TILE_WIDTH, TILE_HEIGHT)
		if AUTOSTART:
			env = "LD_LIBRARY_PATH=" + crlibdir
			prog = crbindir + "/crserver -mothership " + MOTHERSHIP
			node.AutoStart([SHELL,
							 NETHOSTS[index],
							 "/bin/sh -c '" + env + " " + prog + "'"])
			# If you want o run locally with /bin/sh, try this:
			#node.AutoStart(["/bin/sh", "-c", env + " " + prog])
		cr.AddNode(node)

		# Add dist_texture SPU to node
		disttexspu = SPU('dist_texture')
		node.AddSPU(disttexspu)

		# Add render SPU to node
		renderspu = SPU('render')
		renderspu.Conf('window_geometry',
					   [col*(TILE_WIDTH+10), 1.1*row*TILE_HEIGHT,
						TILE_WIDTH, TILE_HEIGHT])
		renderspu.Conf('display_string', ':0')
		renderspu.Conf('title', "Chromium Render SPU %d" % index)
		node.AddSPU(renderspu)

		tilesortspu.AddServer(node, protocol='tcpip', port=7000 + index)


cr.AddNode(clientnode)

cr.Go()
