# Copyright (c) 2001, Stanford University
# All rights reserved
#
# See the file LICENSE.txt for information on redistributing this software.

import sys
sys.path.append( "../server" )
from mothership import *

demo = sys.argv[1] 

cr = CR()
cr.MTU( 1024*1024 )

# setup 2 render nodes an 1 display node, plus
# an app node on the display node
app_node_host     = 'head'
render_node1_host = 'node008'
render_node2_host = 'node008'
display_node_host = 'node008-g'

TILES = 2
READBACK = 1

TILE_WIDTH  = 512 
TILE_HEIGHT = 96
SLOP        = 30

# setup the display node 
render_spu = SPU('render')
render_spu.Conf('window_geometry', [100, 100, TILE_WIDTH, 2*TILE_HEIGHT])
print_spu = SPU('print')
print_spu.Conf('log_file', '/tmp/display_log')

display_node = CRNetworkNode(display_node_host)
display_node.Conf( "only_swap_once", 1 )
display_node.Conf( "only_clear_once", 1 )
display_node.AddSPU(render_spu)

# setup the first render node
if READBACK:
	readback_spu = SPU('readback')
else:
	readback_spu = SPU('render')

readback_spu.Conf('window_geometry', [100, 100+2*TILE_HEIGHT+SLOP, TILE_WIDTH, TILE_HEIGHT])
pack_spu = SPU('pack')

render_node1 = CRNetworkNode(render_node1_host)
render_node1.AddTile(0, 0, TILE_WIDTH, TILE_HEIGHT )

#render_node1.AddSPU(print_spu)
render_node1.AddSPU(readback_spu)
if READBACK:
	render_node1.AddSPU(pack_spu)
	pack_spu.AddServer(display_node, 'tcpip')

# setup the second render node
if TILES > 1:
	if READBACK:
		readback_spu = SPU('readback')
	else:
		readback_spu = SPU('render')

	readback_spu.Conf('window_geometry', [100, 100+3*TILE_HEIGHT+2*SLOP, TILE_WIDTH, TILE_HEIGHT])
	pack_spu = SPU('pack')

	render_node2 = CRNetworkNode(render_node2_host)
	render_node2.AddTile(0, TILE_HEIGHT, TILE_WIDTH, TILE_HEIGHT )
	render_node2.AddSPU(readback_spu)
	if READBACK:
		render_node2.AddSPU(pack_spu)
		pack_spu.AddServer(display_node, 'tcpip')

# setup the application/tilesort node 
tilesort_spu = SPU('tilesort')
tilesort_spu.Conf('draw_bbox', 1)
tilesort_spu.AddServer(render_node1, protocol='tcpip', port=8000 )

if TILES > 1:
	tilesort_spu.AddServer(render_node2, protocol='tcpip', port=7001 )

app_node = CRApplicationNode(app_node_host)
app_node.StartDir( crbindir )
app_node.SetApplication( os.path.join(crbindir,demo))
app_node.AddSPU(tilesort_spu)

# cr setup
if READBACK:
	cr.AddNode(display_node)
cr.AddNode(render_node1)
if TILES > 1:
	cr.AddNode(render_node2)
cr.AddNode(app_node)

cr.Go()
