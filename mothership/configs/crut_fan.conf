
import sys
sys.path.append( "../server" )
from mothership import *

Demo = 'psubmit_crut'

Demo = os.path.join(crbindir, Demo)

# Can render/readback windows by dynamically resized?
resizable = 1

# Set this to zero to work-around a problem with ATI's Linux driver
UseglXChooseVisual = 1


# Set up the server node
servernode1 = CRNetworkNode( )
# Note: each client has the -swap flag and we tell the server to only
# do one SwapBuffers here.
servernode1.Conf( 'only_swap_once', 1 )
servernode1.Conf( 'shared_windows', 1 )
renderspu = SPU( 'render' )
renderspu.Conf( 'window_geometry', [500, 500, 400, 400] )
renderspu.Conf('resizable', resizable)
renderspu.Conf('render_to_crut_window', 1 )
renderspu.Conf('use_glxchoosevisual', UseglXChooseVisual);
servernode1.AddSPU( renderspu )

#create a crutserver
crutserver = CRUTServerNode(  )
crutserver.Conf('window_geometry', [100, 100, 400, 400] )
crutserver.Conf('exit_on_escape', 1)
crutserver.Conf('composite_mode', 'depth')

# Set up first app/client node
appnode1 = CRApplicationNode(  )
appnode1.SetApplication( '%s -rank 0 -size 2 -clear -swap' % Demo )
appnode1.StartDir( crbindir )
spu = SPU('readback')
spu.Conf('window_geometry', [0, 0, 400, 400])
spu.Conf('extract_depth', 1)
spu.Conf('resizable', resizable)
spu.Conf('use_glxchoosevisual', UseglXChooseVisual);
appnode1.AddSPU( spu )
spu = SPU('pack')
appnode1.AddSPU( spu )
spu.AddServer( servernode1, 'tcpip' )

#let's define a CRUTserver as anything that will feed us events
#this way we can create either a ring or a fan configuration
appnode1.AddCRUTServer( crutserver , protocol='tcpip', port=9000 )


# Set up second app/client node
appnode2 = CRApplicationNode( )
appnode2.SetApplication( '%s -rank 1 -size 2 -clear -swap' % Demo )
appnode2.StartDir( crbindir )
spu = SPU('readback')
spu.Conf('window_geometry', [420, 0, 400, 400])
spu.Conf('extract_depth', 1)
spu.Conf('resizable', resizable)
spu.Conf('use_glxchoosevisual', UseglXChooseVisual);
appnode2.AddSPU( spu )
spu = SPU('pack')
appnode2.AddSPU( spu )
spu.AddServer( servernode1, 'tcpip' )

appnode2.AddCRUTServer( crutserver, protocol='tcpip', port=9000 )

cr = CR()
cr.MTU( 10*1024*1024 )
# Note: adding nodes in the order in which they must be started!
cr.AddNode( appnode1 )
cr.AddNode( appnode2 )
cr.AddNode( crutserver )
cr.AddNode( servernode1 )
cr.Go()
