# Copyright (c) 2001, Stanford University
# All rights reserved
#
# See the file LICENSE.txt for information on redistributing this software.

import sys
sys.path.append( "../server" )
from mothership import *

DEMO_DIR = r'C:\progra~1\quakeI~1'
demo = 'quake3'

cr = CR()
cr.MTU( 1024*1024 )

#TILE_COLS = 4
#TILE_ROWS = 3

TILE_COLS = 2
TILE_ROWS = 1

TILE_WIDTH = 320
TILE_HEIGHT = 240

#clientspuname = 'pack'
clientspuname = 'tilesort'
if clientspuname == 'pack' and TILE_ROWS*TILE_COLS != 1:
	print >> sys.stderr, "You cant use the pack SPU with more than one server."
	sys.exit(0)

tilesortspu = SPU( clientspuname )
clientprintspu = SPU( 'print' )

clientnode = CRApplicationNode( )
clientnode.StartDir( DEMO_DIR )
clientnode.SetApplication( demo )
clientprintspu.Conf( 'log_file', '/tmp/CLIENT_LOG' )
#clientnode.AddSPU( clientprintspu )
clientnode.AddSPU( tilesortspu )

for row in range(TILE_ROWS):
	for col in range(TILE_COLS):
		renderspu = SPU( 'render' )
		serverprintspu = SPU( 'print' )
		renderspu.Conf( 'window_geometry', [1.1*col*TILE_WIDTH, 1.1*row*TILE_HEIGHT, TILE_WIDTH, TILE_HEIGHT] )

		node = CRNetworkNode( )
		if clientspuname == 'tilesort':
			node.AddTile( col*TILE_WIDTH, (TILE_ROWS-row-1)*TILE_HEIGHT, TILE_WIDTH, TILE_HEIGHT )

		serverprintspu.Conf( 'log_file', '/tmp/SERVER_LOG%d' % (row*TILE_COLS + col) )
		#node.AddSPU( serverprintspu )
		node.AddSPU( renderspu )
		cr.AddNode( node )

		tilesortspu.AddServer( node, protocol='tcpip', port=7000 + row*TILE_COLS + col )


cr.AddNode( clientnode )
if len(sys.argv) > 1:
	cr.Go( int(sys.argv[1] ))
else:
	cr.Go()
